@page "/ServerIndex/{server}"
@using EQToolApis.DB;
@model EQToolApis.Pages.ServerIndexModel
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js" integrity="sha512-pumBsjNRGGqkPzKHndZMaAG+bir374sORyzM3uulLV14lN5LyykqNk8eEeUlUkB3U0M4FApyaHraT65ihJhDpQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="https://unpkg.com/tabulator-tables@5.4.4/dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.4.4/dist/js/tabulator.min.js"></script>
<script>
    $(document).ready(function () {
        $.get("/api/ServerItem/@Model.Server", function (data, status) {
            if (data) {
                for (let i = 0; i < data.length; i++) {
                    if (data[i].auctionType == 0) {
                        data[i].auctionType = 'WTS';
                    } else if (data[i].auctionType == 1) {
                        data[i].auctionType = 'WTB';
                    } else if (data[i].auctionType == 2) {
                        data[i].auctionType = 'BOTH';
                    }
                    let lastseen = data[i].lastSeen;
                    let d = new Date(lastseen);
                    data[i].lastSeen = d.toLocaleString();
                    data[i].totalLast30DaysAverage = data[i].totalLast30DaysAverage ? data[i].totalLast30DaysAverage + "pp" : '';
                    data[i].totalLast60DaysAverage = data[i].totalLast60DaysAverage ? data[i].totalLast60DaysAverage + "pp" : '';
                    data[i].totalLast90DaysAverage = data[i].totalLast90DaysAverage ? data[i].totalLast90DaysAverage + "pp" : '';
                    data[i].totalLast6MonthsAverage = data[i].totalLast6MonthsAverage ? data[i].totalLast6MonthsAverage + "pp" : '';
                    data[i].totalAuctionAverage = data[i].totalAuctionAverage ? data[i].totalAuctionAverage + "pp" : '';
                }
            }

            let table = new Tabulator("#example-table",
                {
                    maxHeight: "90%",
                    layout: "fitDataStretch",
                    data: data, //set initial table data
                    columns: [
                        { title: "Type", field: "auctionType" },
                        { title: "Last Seen", field: "lastSeen" },
                        {
                            title: "Item", field: "itemName",
                            formatter: function (cell, formatterParams) {
                                let row = cell.getRow().getData();
                                return `<div><a href="/ItemDetails/${row.itemId}/@(Model.Server)" target="_blank">${row.itemName} </a>  <a class="float-right" href="https://wiki.project1999.com/${row.itemName.replace(' ', '_')}" target="_blank"><i class="fa fa-external-link"></i></a></div>`;
                            }
                        },
                        { title: "30d Count", field: "totalLast30DaysCount" },
                        { title: "30d Avg", field: "totalLast30DaysAverage" },
                        { title: "60d Count", field: "totalLast60DaysCount" },
                        { title: "60d Avg", field: "totalLast60DaysAverage" },
                        { title: "90d Count", field: "totalLast90DaysCount" },
                        { title: "90d Avg", field: "totalLast90DaysAverage" },
                        { title: "6M Count", field: "totalLast6MonthsCount" },
                        { title: "6M Avg", field: "totalLast6MonthsAverage" },
                        { title: "All Count", field: "totalAuctionCount" },
                        { title: "All Avg", field: "totalAuctionAverage" }
                    ],
                    progressiveRender: true, //enable progressive rendering
                    progressiveRenderSize: 500, //sets the number of rows to render per block (default = 20)
                    progressiveRenderMargin: 350,
                    rowHeight: 30,
                });
            let valueEl = document.getElementById("filter-value");
            function updateFilter() {
                table.setFilter("itemName", "like", valueEl.value);
            }

            document.getElementById("filter-value").addEventListener("keyup", updateFilter);
            document.getElementById("filter-clear").addEventListener("click", function () {
                valueEl.value = "";
                table.clearFilter();
            });
        });

    });
</script>

<div class="w-100 vh-100">
    <h3>@Model.Server Data </h3>
    <input id="filter-value" type="text" placeholder="Filter by Item">
    <button id="filter-clear">Clear Filter</button>
    <div id="example-table"></div>
</div>
