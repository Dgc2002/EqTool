@page
@using EQToolApis.DB;
@using EQToolShared.Enums;
@model EQToolApis.Pages.IndexModel
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script>
    $(document).ready(function () {
    var key = $(".mytime").each(function (i, obj) {
    var element = $(this); // <div> or <span> element.
    var utc = element.attr("utc"); // "2018-12-28T02:36:13.6774675Z"
    var d = new Date(utc);
    var l = d.toLocaleString(); // Runs client side, so will be client's local time!
    element.text(l);
    });
    });
</script>
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-8 offset-lg-2 col-12">
            <div class="jumbotron">
                <h1 class="display-4">P99 Tunnel Prices</h1>
                <p class="lead">This site monitors continuously prices in the tunnel!</p>
                @if (Model.ServerMessage != null)
                {
                    <div class="alert alert-@Model.ServerMessage.AlertType" role="alert">
                        <h4 class="alert-heading">@Model.ServerMessage.Title</h4>
                        <p>@Model.ServerMessage.Message</p>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-8 offset-lg-2 col-12">
            <div class="card-deck">
                <div class="card border-success mb-3">
                    <div class="card-body">
                        <p class="card-text">
                            <div class="row">
                                <div class=col-6>
                                    <p>For API documentation, please refer to <a href="/swagger">Swagger</a> </p>
                                    <p>If you discover prices discrepancies, please open an issue on <a href="https://github.com/smasherprog/EqTool" target="_blank">Github</a> </p>
                                    <table>
                                        <tbody>
                                            <tr>
                                                <th>Total Players</th>
                                                <td>@Model.AllData.TotalEQAuctionPlayers.ToString("n0")</td>
                                            </tr>
                                            <tr>
                                                <th>Total Items</th>
                                                <td>@Model.AllData.TotalUniqueItems.ToString("n0")</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class=col-6>
                                    <p>
                                        <strong>Get Pigarse to enhance your gameplay!</strong> Map, DPS, Spell Timer, Mob Info and more!
                                    </p>
                                    <a href="https://github.com/smasherprog/EqTool" target="_blank"><img class="img-fluid" src="https://raw.githubusercontent.com/smasherprog/EqTool/main/Example.png" height="400" /></a>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 col-lg-8 offset-lg-2">
            <div class="row">
                @foreach (var item in EQToolApis.Pages.IndexModel.PigParseStats)
                { 
                    <div class="col-6 card border-@item.CssClass mb-1">
                        <div class="card-body">
                            <h5 class="card-title text-@item.CssClass">@item.Server Server</h5>
                            <p class="card-text">
                                <table>
                                    <tbody>
                                        @if (item.Server == Servers.Green || item.Server == Servers.Blue)
                                        {
                                            <tr>
                                                <th>Total Actioned Items</th>
                                                <td>@Model.AllData.ServerData[(int)item.Server].TotalEQTunnelAuctionItems.ToString("n0")</td>
                                            </tr>
                                            <tr>
                                                <th>Total Actions</th>
                                                <td>@Model.AllData.ServerData[(int)item.Server].TotalEQTunnelMessages.ToString("n0")</td>
                                            </tr>
                                            <tr>
                                                <th>Last Updated</th>
                                                <td class="mytime" utc="@Model.AllData.ServerData[(int)item.Server].RecentImportTimeStamp.ToString("o")"></td>
                                            </tr>
                                            <tr>
                                                <th>Oldest Import</th>
                                                <td class="mytime" utc="@Model.AllData.ServerData[(int)item.Server].OldestImportTimeStamp.ToString("o")"></td>
                                            </tr>
                                        }

                                        <tr>
                                            <th>Map Users</th>
                                            <td>@item.PigParsePlayerCount</td>
                                        </tr>
                                        <tr>
                                            <th>Unique Users</th>
                                            <td>@item.PigParseUniquePlayerCount</td>
                                        </tr>
                                        <tr>
                                            <th>Top Zones</th>
                                            <td>
                                                @foreach (var z in @item.zoneStats.OrderByDescending(a => a.Count).Where(a => a.Count > 0).Take(5))
                                                {
                                                    <text>@z.Zone:@z.Count/</text>
                                                }
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </p>
                            @if (item.Server == Servers.Green || item.Server == Servers.Blue)
                            {
                                <a href="/ServerIndex/@item.Server" class="btn btn-success">Prices</a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div> 
    <div class="row">
        <div class="col-lg-8 offset-lg-2 col-12">
            <div class="card-deck">
                <div class="card border-success mb-3">
                    <div class="card-body">
                        <h5 class="card-title text-success">Green Server TOD's <small>(times are all Local times)</small></h5>
                        <p class="card-text">
                            <table>
                                <tbody>
                                    @foreach (var item in Model.GreenNoteableNPCs)
                                    {
                                        <tr>
                                            <th class="pr-5">@item.Name</th>
                                            @if (item.EventTime.HasValue)
                                            {
                                                <td class="mytime" utc="@item.EventTime.Value.ToString("o")"></td>
                                            }
                                            else
                                            {
                                                <td>N/A</td>
                                            }

                                        </tr>
                                        @foreach (var fixedtime in item.FixedTimeNPCDateTimes)
                                        {
                                            <tr>
                                                <th class="text-right">(Guess)</th>
                                                <td class="mytime" utc="@fixedtime.ToString("o")"></td>
                                            </tr>
                                        }
                                        @foreach (var rangedtime in item.RangeTimeNPCDateTime)
                                        {
                                            <tr>
                                                @if (item.RangeTimeNPCDateTime.Count > 1)
                                                {
                                                    <th class="text-right">(Guess)</th>
                                                }
                                                else
                                                {
                                                    <th class="text-right">(Window)</th>
                                                }

                                                <td>
                                                    <span class="mytime" utc="@rangedtime.BegWindow.ToString("o")"></span>
                                                    <span> - </span>
                                                    <span class="mytime" utc="@rangedtime.EndWindow.ToString("o")"></span>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> 