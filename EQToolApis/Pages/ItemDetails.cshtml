@page "/ItemDetails/{itemid}/{server}"
@model EQToolApis.Pages.ItemDetailsModel
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<link href="https://unpkg.com/tabulator-tables@5.4.4/dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.4.4/dist/js/tabulator.min.js"></script>
<script>
    $(document).ready(function () {
        let tableData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item.Items,  new Newtonsoft.Json.Converters.StringEnumConverter())); 
        var valueEl = document.getElementById("filter-value");
        function updateFilter() {
            table.setFilter("PlayerName", "like", valueEl.value);
        }

        document.getElementById("filter-value").addEventListener("keyup", updateFilter);
        document.getElementById("filter-clear").addEventListener("click", function () {
            valueEl.value = "";
            table.clearFilter();
        });
        var table = new Tabulator("#example-table",
            {
                maxHeight: "90%",
                layout: "fitDataStretch",
                data: tableData, //set initial table data
                columns: [
                    { title: "Type", field: "AuctionType" },
                    { title: "Player Name", field: "PlayerName" },
                    {
                        title: "Auction Price", field: "AuctionPrice",
                        formatter: function (cell, formatterParams) {
                            let price = cell.getRow().getData().AuctionPrice;
                            return price ? price + "pp" : ''; 
                        }
                    },
                    {
                        title: "Timestamp", field: "TunnelTimestamp",
                        formatter: function (cell, formatterParams) {
                            let lastseen = cell.getRow().getData().TunnelTimestamp;
                            let d = new Date(lastseen);
                            return d.toLocaleString();
                        }
                    },
                ],
                progressiveRender: true, //enable progressive rendering
                progressiveRenderSize: 500, //sets the number of rows to render per block (default = 20)
                progressiveRenderMargin: 350
            });

    });
</script>
<div class="w-100 vh-100">
    <h3><a href="https://wiki.project1999.com/@(Model.Item.ItemName.Replace(' ', '_'))" target="_blank">@Model.Item.ItemName <i class="fa fa-external-link"></i></a> </h3>
    <input id="filter-value" type="text" placeholder="Filter by Player">
    <button id="filter-clear">Clear Filter</button>
    <div id="example-table"></div>
</div>
