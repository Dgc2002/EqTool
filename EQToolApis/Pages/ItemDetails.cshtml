@page "/ItemDetails/{itemid}/{server}"
@model EQToolApis.Pages.ItemDetailsModel
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js" integrity="sha512-pumBsjNRGGqkPzKHndZMaAG+bir374sORyzM3uulLV14lN5LyykqNk8eEeUlUkB3U0M4FApyaHraT65ihJhDpQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link href="https://unpkg.com/tabulator-tables@5.4.4/dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.4.4/dist/js/tabulator.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.2.1/chart.umd.js" integrity="sha512-vCUbejtS+HcWYtDHRF2T5B0BKwVG/CLeuew5uT2AiX4SJ2Wff52+kfgONvtdATqkqQMC9Ye5K+Td0OTaz+P7cw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.0/moment.min.js" integrity="sha512-Izh34nqeeR7/nwthfeE0SI3c8uhFSnqxV0sI9TvTcXiFJkMd6fB644O64BRq2P/LA/+7eRvCw4GmLsXksyTHBg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-adapter-moment/1.0.1/chartjs-adapter-moment.min.js" integrity="sha512-hVy4KxCKgnXi2ok7rlnlPma4JHXI1VPQeempoaclV1GwRHrDeaiuS1pI6DVldaj5oh6Opy2XJ2CTljQLPkaMrQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    $(document).ready(function () {
        $.get("/api/serveritemdetail/@Model.Server/@Model.ItemId", function (data, status) {
            if (data.items) {
            
                        for (let i = 0; i < data.items.length; i++) {
                    if (data.items[i].auctionType == 0) {
                        data.items[i].auctionType = 'WTS';
                    } else if (data.items[i].auctionType == 1) {
                        data.items[i].auctionType = 'WTB';
                    } else if (data.items[i].auctionType == 2) {
                        data.items[i].auctionType = 'BOTH';
                    }
                    let tunnelTimestamp = data.items[i].tunnelTimestamp;
                    let d = new Date(tunnelTimestamp);
                    data.items[i].tunnelTimestamp = d.toLocaleString();
                    data.items[i].auctionPrice = data.items[i].auctionPrice ? data.items[i].auctionPrice + "pp" : '';
                }
            }
            if(data){
                document.getElementById('ItemName').innerHTML = `<a href="https://wiki.project1999.com/${data.itemName.replace(' ', '_')}" target = "_blank"> ${data.itemName} <i class="fa fa-external-link" > </i></a >`;
            }
            var table = new Tabulator("#example-table",
                {
                    maxHeight: "90%",
                    layout: "fitDataStretch",
                    data: data.items, //set initial table data
                    columns: [
                        { title: "Type", field: "auctionType" },
                        { title: "Player Name", field: "playerName" },
                        { title: "Auction Price", field: "auctionPrice" },
                        { title: "Timestamp", field: "tunnelTimestamp" }
                    ],
                    progressiveRender: true, //enable progressive rendering
                    progressiveRenderSize: 500, //sets the number of rows to render per block (default = 20)
                    progressiveRenderMargin: 350
                });
            let valueEl = document.getElementById("filter-value");
            function updateFilter() {
                table.setFilter("playerName", "like", valueEl.value);
            }

            document.getElementById("filter-value").addEventListener("keyup", updateFilter);
            document.getElementById("filter-clear").addEventListener("click", function () {
                valueEl.value = "";
                table.clearFilter();
            });
        });

        //const ctx = document.getElementById('myChart');

        //const chart = new Chart(ctx, {
        //    type: 'line',
        //    data:{
        //        datasets: [{
        //            data: chardata
        //        }]
        //    },
        //    options: {
        //        scales: {
        //            x: {
        //                type: 'time',
        //            }
        //        },
        //        plugins: {
        //            legend: {
        //                display: false
        //            }
        //        }
        //    }
        //});
    });
</script>



<div class="w-100 vh-100">
    <h3 id="ItemName"></h3>
    @*    <canvas id="myChart" height="300"></canvas>*@
    <input id="filter-value" type="text" placeholder="Filter by Player">
    <button id="filter-clear">Clear Filter</button>
    <div id="example-table"></div>
</div>
