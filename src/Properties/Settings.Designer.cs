//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EQTool.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.5.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Light")]
        public string ColorMode {
            get {
                return ((string)(this["ColorMode"]));
            }
            set {
                this["ColorMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("12")]
        public int GlobalFontSize {
            get {
                return ((int)(this["GlobalFontSize"]));
            }
            set {
                this["GlobalFontSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public double GlobalTriggerWindowOpacity {
            get {
                return ((double)(this["GlobalTriggerWindowOpacity"]));
            }
            set {
                this["GlobalTriggerWindowOpacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public double GlobalDPSWindowOpacity {
            get {
                return ((double)(this["GlobalDPSWindowOpacity"]));
            }
            set {
                this["GlobalDPSWindowOpacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public double GlobalMapWindowOpacity {
            get {
                return ((double)(this["GlobalMapWindowOpacity"]));
            }
            set {
                this["GlobalMapWindowOpacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public double GlobalMobWindowOpacity {
            get {
                return ((double)(this["GlobalMobWindowOpacity"]));
            }
            set {
                this["GlobalMobWindowOpacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GlobalTriggerWindowAlwaysOnTop {
            get {
                return ((bool)(this["GlobalTriggerWindowAlwaysOnTop"]));
            }
            set {
                this["GlobalTriggerWindowAlwaysOnTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GlobalDpsWindowAlwaysOnTop {
            get {
                return ((bool)(this["GlobalDpsWindowAlwaysOnTop"]));
            }
            set {
                this["GlobalDpsWindowAlwaysOnTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GlobalMapWindowAlwaysOnTop {
            get {
                return ((bool)(this["GlobalMapWindowAlwaysOnTop"]));
            }
            set {
                this["GlobalMapWindowAlwaysOnTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GlobalMobWindowAlwaysOnTop {
            get {
                return ((bool)(this["GlobalMobWindowAlwaysOnTop"]));
            }
            set {
                this["GlobalMobWindowAlwaysOnTop"] = value;
            }
        }
    }
}
